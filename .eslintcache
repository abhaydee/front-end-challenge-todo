[{"/Users/abhay/Desktop/todo-react/src/index.js":"1","/Users/abhay/Desktop/todo-react/src/App.js":"2","/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx":"3","/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx":"4","/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js":"5","/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js":"6","/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx":"7","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js":"8"},{"size":381,"mtime":1609952925130,"results":"9","hashOfConfig":"10"},{"size":200,"mtime":1610185200298,"results":"11","hashOfConfig":"10"},{"size":1442,"mtime":1610110834293,"results":"12","hashOfConfig":"10"},{"size":1411,"mtime":1610213216374,"results":"13","hashOfConfig":"10"},{"size":986,"mtime":1610212349780,"results":"14","hashOfConfig":"10"},{"size":174,"mtime":1609952585833,"results":"15","hashOfConfig":"10"},{"size":2002,"mtime":1610215636444,"results":"16","hashOfConfig":"10"},{"size":173,"mtime":1610211884130,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q8y6gh",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abhay/Desktop/todo-react/src/index.js",[],"/Users/abhay/Desktop/todo-react/src/App.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx",["36","37","38","39"],"import React, { useState,useEffect } from \"react\";\nimport IconMoon from \"../images/icon-moon.svg\";\nimport IconSun from \"../images/icon-sun.svg\";\nimport styles from \"../styles/TodoContainer.scss\";\nimport InputContainer from \"./InputContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TodoListContainer from \"./TodoListContainer\";\nfunction TodoContainer() {\n  const [theme, setTheme] = useState(true);\n  const dispatch = useDispatch();\n  const todolist = useSelector((state) => state.todoreducer.todos);\n  useEffect(()=>{\n    dispatch({ type: \"THEME\", payload: theme });\n  },[theme])\n  const handleTheme = () => {\n    setTheme(!theme);\n  };\n  console.log(\"the theming \",theme)\n  return (\n    <>\n      <div\n        className={`todo-container ${\n          theme === true ? \"todo-container__light\" : \"todo-container__dark\"\n        }`}\n      >\n        <div className={\"todo-container__theme\"}>\n          <h1 className={\"todo-container__heading\"}>T O D O</h1>\n          <img\n            src={theme === true ? IconSun : IconMoon}\n            className={\"todo-container__themeicon\"}\n            onClick={handleTheme}\n          />\n        </div>\n        <InputContainer />\n        <div className=\"todolist-container\">\n          <TodoListContainer />\n        </div>\n        <div className=\"todobottom-container\" style={{backgroundColor:theme===true?\"\":\"#161621\"}}></div>\n      </div>\n    </>\n  );\n}\n\nexport default TodoContainer;\n","/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx",["40","41","42"],"/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js",[],"/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx",["43"],"import React,{useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"../styles/TodoListContainer.scss\";\nimport IconCheck from \"../images/icon-check.svg\";\nimport IconCross from \"../images/icon-cross.svg\";\nimport * as types from \"../redux/actiontypes\";\nfunction TodoListContainer() {\n  const [completed,setCompleted]=useState(false)\n  const todolist = useSelector((state) => state.todoreducer.todos);\n  console.log(\"the todolist\",todolist)\n  const theme = useSelector((state) => state.todoreducer.theme);\n  console.log(\"the theme\", theme);\n  const dispatch=useDispatch();\n  const handleDelete=(index)=>{\n    console.log(\"hitting\",index)\n    dispatch({type:types.DELETE_TASK,payload:index})\n  }\n  const handleUpdate=(index,input)=>{\n    dispatch({type:types.EDIT__TASK,payload:{\"index\":index,input:input}})\n  }\n  const handleComplete=()=>[\n    setCompleted(!completed)\n  ]\n  return (\n    <>\n      {todolist.map((item,index) => {\n        return (\n          <div\n            className={`input-container input-container${theme===true?\"__light\":\"__dark\"}`}\n            key={index}\n          >\n            <div className=\"input-container__child\">\n              <div className=\"input-container__child__checkmark\" onClick={handleComplete}>\n                {completed===true &&\n                  <img\n                  src={IconCheck}\n                  alt=\"check-icon\"\n                  className={\"input-container__check\"}\n                />\n                }\n              </div>\n              <p className={`input-container__text input-container__text${completed===true?\"__completed\":\"\"}`} onClick={()=>handleUpdate(index,item.input)}>{item.input}</p>\n              <img\n                src={IconCross}\n                alt=\"delete-icon\"\n                className={\"input-container__cross\"}\n                onClick={()=>handleDelete(index)}\n              />\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default TodoListContainer;\n","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js",[],{"ruleId":"44","severity":1,"message":"45","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":11,"column":9,"nodeType":"46","messageId":"47","endLine":11,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":14,"column":5,"nodeType":"51","endLine":14,"endColumn":12,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":28,"column":11,"nodeType":"55","endLine":32,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"56","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":16,"column":39,"nodeType":"59","messageId":"60","endLine":16,"endColumn":41},{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":14},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'todolist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["61"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CheckIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"62","fix":"63"},"Update the dependencies array to be: [dispatch, theme]",{"range":"64","text":"65"},[596,603],"[dispatch, theme]"]