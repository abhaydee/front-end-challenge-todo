[{"/Users/abhay/Desktop/todo-react/src/index.js":"1","/Users/abhay/Desktop/todo-react/src/App.js":"2","/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx":"3","/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx":"4","/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js":"5","/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js":"6","/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx":"7","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js":"8","/Users/abhay/Desktop/todo-react/src/Components/TabsContainer.jsx":"9"},{"size":381,"mtime":1609952925130,"results":"10","hashOfConfig":"11"},{"size":200,"mtime":1610635476681,"results":"12","hashOfConfig":"11"},{"size":1603,"mtime":1610735464114,"results":"13","hashOfConfig":"11"},{"size":1612,"mtime":1610613498790,"results":"14","hashOfConfig":"11"},{"size":1395,"mtime":1610627600738,"results":"15","hashOfConfig":"11"},{"size":174,"mtime":1609952585833,"results":"16","hashOfConfig":"11"},{"size":2362,"mtime":1610622393893,"results":"17","hashOfConfig":"11"},{"size":255,"mtime":1610620757531,"results":"18","hashOfConfig":"11"},{"size":1757,"mtime":1610735730552,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q8y6gh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abhay/Desktop/todo-react/src/index.js",[],"/Users/abhay/Desktop/todo-react/src/App.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx",["41","42","43","44"],"/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx",["45","46","47"],"import React,{useState} from 'react'\nimport styles from \"../styles/inputcontainer.scss\"\nimport {useDispatch,useSelector} from \"react-redux\"\nimport { ADD_TASK, UPDATE_TASK } from '../redux/actiontypes';\nfunction InputContainer() {\n    const dispatch=useDispatch();\n    const theme=useSelector((state)=>state.todoreducer.theme)\n    const cachedInput=useSelector((state)=>state.todoreducer.cachedInput)\n    const [input,setInput]=useState(cachedInput.input?cachedInput.input:\"\")\n    const handleChange=(event)=>{\n        setInput(event.target.value)\n    }\n    const handleKeyPress=(event)=>{\n        if(input!==\"\" && event.keyCode==13 && Object.keys(cachedInput).length === 0){\n            dispatch({type:ADD_TASK,payload:{\"completed\":false,input}})\n        }\n        else if(input!==cachedInput.input && event.keyCode==13 && Object.keys(cachedInput).length !== 0){\n            dispatch({type:UPDATE_TASK,payload:{\"completed\":false,\"index\":cachedInput.index,updatetask:input}})\n        }\n    }\n    return (\n        <div className=\"main-container\">\n            <div className={`input-container  input-container__${theme===true?\"light\":\"dark\"}`} style={{backgroundColor:theme===true?\"white\":\"#25273c\"}} >\n                <span>\n                    <input className={`input-container__todo input-container__todo__${theme===true?\"light\":\"dark\"}`} placeholder=\"Create a new Todo and press enter\" onChange={handleChange} value={input} onKeyUp={handleKeyPress} style={{backgroundColor:theme===true?\"white\":\"#25273c\"}}/>\n                </span>    \n            </div> \n        </div>\n    )\n}\n\nexport default InputContainer\n","/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js",[],"/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js",[],["48","49"],"/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx",["50","51"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"../styles/TodoListContainer.scss\";\nimport IconCheck from \"../images/icon-check.svg\";\nimport IconCross from \"../images/icon-cross.svg\";\nimport * as types from \"../redux/actiontypes\";\nfunction TodoListContainer() {\n  const todolist = useSelector((state) => state.todoreducer.todos);\n  console.log(\"the todolist\", todolist);\n  const theme = useSelector((state) => state.todoreducer.theme);\n  const dispatch = useDispatch();\n  const handleDelete = (index) => {\n    dispatch({ type: types.DELETE_TASK, payload: index });\n  };\n  const handleUpdate = (index, input) => {\n    dispatch({\n      type: types.EDIT__TASK,\n      payload: { index: index, input: input },\n    });\n  };\n  const handleComplete = (index, input) => {\n    dispatch({\n      type: types.UPDATE_TASK,\n      payload: { index: index, completed: true, updatetask: input },\n    });\n  };\n  return (\n    <>\n      {todolist.map((item, index) => {\n        return (\n          <div\n            className={`inputlist-container inputlist-container${\n              theme === true ? \"__light\" : \"__dark\"\n            }`}\n            key={index}\n          >\n            <div className=\"inputlist-container__child\">\n              <div\n                className=\"inputlist-container__child__checkmark\"\n                onClick={() => handleComplete(index, item.input)}\n                key={index}\n              >\n                {item.completed === true && (\n                  <img\n                    src={IconCheck}\n                    alt=\"check-icon\"\n                    className={\"inputlist-container__check\"}\n                  />\n                )}\n              </div>\n              <p\n                className={`inputlist-container__text inputlist-container__text${\n                  item.completed === true ? \"__completed\" : \"\"\n                }`}\n                onClick={() => handleUpdate(index, item.input)}\n              >\n                {item.input}\n              </p>\n              <img\n                src={IconCross}\n                alt=\"delete-icon\"\n                className={\"inputlist-container__cross\"}\n                onClick={() => handleDelete(index)}\n              />\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default TodoListContainer;\n","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TabsContainer.jsx",["52","53","54","55","56","57","58"],{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":12,"column":9,"nodeType":"61","messageId":"62","endLine":12,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":15,"column":6,"nodeType":"66","endLine":15,"endColumn":13,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":28,"column":11,"nodeType":"70","endLine":32,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":14,"column":39,"nodeType":"73","messageId":"74","endLine":14,"endColumn":41},{"ruleId":"71","severity":1,"message":"72","line":17,"column":59,"nodeType":"73","messageId":"74","endLine":17,"endColumn":61},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"59","severity":1,"message":"79","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":14},{"ruleId":"59","severity":1,"message":"79","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"80","line":9,"column":9,"nodeType":"61","messageId":"62","endLine":9,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":9,"column":44,"nodeType":"83","messageId":"84","endLine":9,"endColumn":46},{"ruleId":"71","severity":1,"message":"72","line":10,"column":24,"nodeType":"73","messageId":"74","endLine":10,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":16,"column":29,"nodeType":"73","messageId":"74","endLine":16,"endColumn":31},{"ruleId":"71","severity":1,"message":"72","line":22,"column":29,"nodeType":"73","messageId":"74","endLine":22,"endColumn":31},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'todolist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'useState' is defined but never used.","'index' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"88","fix":"89"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch, theme]",{"range":"90","text":"91"},[645,652],"[dispatch, theme]"]