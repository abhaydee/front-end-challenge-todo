[{"/Users/abhay/Desktop/todo-react/src/index.js":"1","/Users/abhay/Desktop/todo-react/src/App.js":"2","/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx":"3","/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx":"4","/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js":"5","/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js":"6","/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx":"7","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js":"8","/Users/abhay/Desktop/todo-react/src/Components/TabsContainer.jsx":"9"},{"size":381,"mtime":1609952925130,"results":"10","hashOfConfig":"11"},{"size":200,"mtime":1610635476681,"results":"12","hashOfConfig":"11"},{"size":1539,"mtime":1611243260034,"results":"13","hashOfConfig":"11"},{"size":1728,"mtime":1611424830174,"results":"14","hashOfConfig":"11"},{"size":1498,"mtime":1611423295779,"results":"15","hashOfConfig":"11"},{"size":174,"mtime":1609952585833,"results":"16","hashOfConfig":"11"},{"size":3413,"mtime":1611339671001,"results":"17","hashOfConfig":"11"},{"size":255,"mtime":1610620757531,"results":"18","hashOfConfig":"11"},{"size":1754,"mtime":1611425293607,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q8y6gh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abhay/Desktop/todo-react/src/index.js",[],"/Users/abhay/Desktop/todo-react/src/App.js",[],["42","43"],"/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx",["44"],"import React, { useState, useEffect } from \"react\";\nimport IconMoon from \"../images/icon-moon.svg\";\nimport IconSun from \"../images/icon-sun.svg\";\nimport InputContainer from \"./InputContainer\";\nimport { useDispatch } from \"react-redux\";\nimport TodoListContainer from \"./TodoListContainer\";\nimport TabsContainer from \"./TabsContainer\";\nimport \"../styles/TodoContainer.scss\";\nfunction TodoContainer() {\n  const [theme, setTheme] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: \"THEME\", payload: theme });\n  }, [theme]);\n  const handleTheme = () => {\n    setTheme(!theme);\n  };\n  return (\n    <>\n      <div\n        className={`todo-container ${\n          theme === true ? \"todo-container__light\" : \"todo-container__dark\"\n        }`}\n      >\n        <div className={\"todo-container__theme\"}>\n          <h1 className={\"todo-container__heading animate__animated animate__bounceInDown\"}>T O D O</h1>\n          <img\n            alt=\"theme-icon\"\n            src={theme === false ? IconSun : IconMoon}\n            className={\"todo-container__themeicon animate__animated animate__bounceInDown\"}\n            onClick={handleTheme}\n          />\n        </div>\n        <InputContainer />\n        <div className=\"todolist-container\">\n          <TodoListContainer />\n          <TabsContainer />\n        </div>\n        <div\n          className=\"todobottom-container\"\n          style={{ backgroundColor: theme === true ? \"\" : \"#161621\" }}\n        ></div>\n      </div>\n    </>\n  );\n}\n\nexport default TodoContainer;\n","/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx",[],"/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js",[],"/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js",[],["45","46"],"/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx",["47"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport IconCheck from \"../images/icon-check.svg\";\nimport IconCross from \"../images/icon-cross.svg\";\nimport * as types from \"../redux/actiontypes\";\nimport \"../styles/TodoListContainer.scss\";\nfunction TodoListContainer() {\n  const todolist = useSelector((state) => state.todoreducer.todos);\n  console.log(\"the todolist\", todolist);\n  const theme = useSelector((state) => state.todoreducer.theme);\n  const filterTodo = useSelector((state) => state.todoreducer.filterTodo);\n  console.log(\"the filter todo list\", filterTodo);\n  const [completestate, setCompletedState] = useState(false);\n  const [indexvalue, setIndexValue] = useState(\"-1\");\n  const [inputvalue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const handleDelete = (index) => {\n    dispatch({ type: types.DELETE_TASK, payload: index });\n  };\n  const handleUpdate = (index, input) => {\n    dispatch({\n      type: types.EDIT__TASK,\n      payload: { index: index, input: input },\n    });\n  };\n  const handleComplete = (index, input) => {\n    setIndexValue(index);\n    setInputValue(input);\n    setCompletedState(!completestate);\n  };\n  useEffect(() => {\n    if (indexvalue !== -1 && inputvalue !== \"\") {\n      if (completestate === true) {\n        dispatch({\n          type: types.UPDATE_TASK,\n          payload: {\n            index: indexvalue,\n            completed: true,\n            updatetask: inputvalue,\n          },\n        });\n      } else {\n        dispatch({\n          type: types.UPDATE_TASK,\n          payload: {\n            index: indexvalue,\n            completed: false,\n            updatetask: inputvalue,\n          },\n        });\n      }\n    }\n  }, [completestate, indexvalue, inputvalue]);\n  function listMapped() {\n    if (filterTodo?.filter === \"complete\") {\n      return filterTodo.list;\n    } else if (filterTodo.filter === \"active\") {\n      return filterTodo.list;\n    }\n    return todolist;\n  }\n  return (\n    <>\n      {listMapped().map((item, index) => {\n        return (\n          <div\n            className={`inputlist-container inputlist-container${\n              theme === true ? \"__light\" : \"__dark\"\n            }`}\n            key={index}\n          >\n            <div className=\"inputlist-container__child\">\n              <div\n                className=\"inputlist-container__child__checkmark\"\n                onClick={() => handleComplete(index, item.input)}\n                key={index}\n              >\n                {item.completed === true && (\n                  <img\n                    src={IconCheck}\n                    alt=\"check-icon\"\n                    className={\"inputlist-container__check\"}\n                  />\n                )}\n              </div>\n              <p\n                className={`inputlist-container__text inputlist-container__text${\n                  item.completed === true ? \"__completed\" : \"\"\n                }`}\n                onClick={() => handleUpdate(index, item.input)}\n              >\n                {item.input}\n              </p>\n              <img\n                src={IconCross}\n                alt=\"delete-icon\"\n                className={\"inputlist-container__cross\"}\n                onClick={() => handleDelete(index)}\n              />\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default TodoListContainer;\n","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TabsContainer.jsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":14,"column":6,"nodeType":"54","endLine":14,"endColumn":13,"suggestions":"55"},{"ruleId":"48","replacedBy":"56"},{"ruleId":"50","replacedBy":"57"},{"ruleId":"52","severity":1,"message":"53","line":53,"column":6,"nodeType":"54","endLine":53,"endColumn":45,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["61"],["59"],["60"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [dispatch, theme]",{"range":"67","text":"68"},"Update the dependencies array to be: [completestate, dispatch, indexvalue, inputvalue]",{"range":"69","text":"70"},[552,559],"[dispatch, theme]",[1753,1792],"[completestate, dispatch, indexvalue, inputvalue]"]