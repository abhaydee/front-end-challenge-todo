[{"/Users/abhay/Desktop/todo-react/src/index.js":"1","/Users/abhay/Desktop/todo-react/src/App.js":"2","/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx":"3","/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx":"4","/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js":"5","/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js":"6","/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx":"7","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js":"8","/Users/abhay/Desktop/todo-react/src/Components/TabsContainer.jsx":"9"},{"size":381,"mtime":1609952925130,"results":"10","hashOfConfig":"11"},{"size":200,"mtime":1610185200298,"results":"12","hashOfConfig":"11"},{"size":1522,"mtime":1610461480746,"results":"13","hashOfConfig":"11"},{"size":1596,"mtime":1610473603126,"results":"14","hashOfConfig":"11"},{"size":1129,"mtime":1610560109676,"results":"15","hashOfConfig":"11"},{"size":174,"mtime":1609952585833,"results":"16","hashOfConfig":"11"},{"size":2353,"mtime":1610560707005,"results":"17","hashOfConfig":"11"},{"size":173,"mtime":1610211884130,"results":"18","hashOfConfig":"11"},{"size":993,"mtime":1610561073141,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q8y6gh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abhay/Desktop/todo-react/src/index.js",[],"/Users/abhay/Desktop/todo-react/src/App.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx",["39","40","41","42"],"/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx",["43","44","45"],"import React,{useState} from 'react'\nimport styles from \"../styles/inputcontainer.scss\"\nimport {useDispatch,useSelector} from \"react-redux\"\nimport { ADD_TASK, UPDATE_TASK } from '../redux/actiontypes';\nfunction InputContainer() {\n    const dispatch=useDispatch();\n    const theme=useSelector((state)=>state.todoreducer.theme)\n    const cachedInput=useSelector((state)=>state.todoreducer.cachedInput)\n    const [input,setInput]=useState(cachedInput.input?cachedInput.input:\"\")\n    const handleChange=(event)=>{\n        setInput(event.target.value)\n    }\n    const handleKeyPress=(event)=>{\n        if(input!==\"\" && event.keyCode==13 && Object.keys(cachedInput).length === 0){\n            dispatch({type:ADD_TASK,payload:{\"completed\":false,input}})\n        }\n        else if(input!==cachedInput.input && event.keyCode==13 && Object.keys(cachedInput).length !== 0){\n            dispatch({type:UPDATE_TASK,payload:{\"completed\":false,\"index\":cachedInput.index,updatetask:input}})\n        }\n    }\n    return (\n        <div className=\"main-container\">\n            <div className={`input-container  input-container__${theme===true?\"light\":\"dark\"}`} style={{backgroundColor:theme===true?\"white\":\"#25273c\"}} >\n                <span>\n                    <input className={`input-container__todo input-container__todo__${theme===true?\"light\":\"dark\"}`} placeholder=\"Create a new Todo\" onChange={handleChange} value={input} onKeyUp={handleKeyPress} style={{backgroundColor:theme===true?\"white\":\"#25273c\"}}/>\n                </span>    \n            </div> \n        </div>\n    )\n}\n\nexport default InputContainer\n","/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js",[],"/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx",["46","47"],"/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TabsContainer.jsx",["48"],{"ruleId":"49","severity":1,"message":"50","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":12,"column":9,"nodeType":"51","messageId":"52","endLine":12,"endColumn":17},{"ruleId":"54","severity":1,"message":"55","line":15,"column":6,"nodeType":"56","endLine":15,"endColumn":13,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":28,"column":11,"nodeType":"60","endLine":32,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":14,"column":39,"nodeType":"63","messageId":"64","endLine":14,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":17,"column":59,"nodeType":"63","messageId":"64","endLine":17,"endColumn":61},{"ruleId":"49","severity":1,"message":"65","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":14},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'todolist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.",{"desc":"67","fix":"68"},"Update the dependencies array to be: [dispatch, theme]",{"range":"69","text":"70"},[645,652],"[dispatch, theme]"]