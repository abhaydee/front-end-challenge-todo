[{"/Users/abhay/Desktop/todo-react/src/index.js":"1","/Users/abhay/Desktop/todo-react/src/App.js":"2","/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx":"3","/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx":"4","/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js":"5","/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js":"6","/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx":"7","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js":"8","/Users/abhay/Desktop/todo-react/src/Components/TabsContainer.jsx":"9"},{"size":381,"mtime":1609952925130,"results":"10","hashOfConfig":"11"},{"size":200,"mtime":1610635476681,"results":"12","hashOfConfig":"11"},{"size":1603,"mtime":1610735464114,"results":"13","hashOfConfig":"11"},{"size":1561,"mtime":1610820603829,"results":"14","hashOfConfig":"11"},{"size":1395,"mtime":1610627600738,"results":"15","hashOfConfig":"11"},{"size":174,"mtime":1609952585833,"results":"16","hashOfConfig":"11"},{"size":2362,"mtime":1610622393893,"results":"17","hashOfConfig":"11"},{"size":255,"mtime":1610620757531,"results":"18","hashOfConfig":"11"},{"size":1757,"mtime":1610735730552,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q8y6gh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/abhay/Desktop/todo-react/src/index.js",[],"/Users/abhay/Desktop/todo-react/src/App.js",[],["43","44"],"/Users/abhay/Desktop/todo-react/src/Components/TodoContainer.jsx",["45","46","47","48"],"/Users/abhay/Desktop/todo-react/src/Components/InputContainer.jsx",["49","50","51"],"import React,{useState} from 'react'\nimport styles from \"../styles/inputcontainer.scss\"\nimport {useDispatch,useSelector} from \"react-redux\"\nimport { ADD_TASK, UPDATE_TASK } from '../redux/actiontypes';\nfunction InputContainer() {\n    const dispatch=useDispatch();\n    const theme=useSelector((state)=>state.todoreducer.theme)\n    const cachedInput=useSelector((state)=>state.todoreducer.cachedInput)\n    const [input,setInput]=useState(cachedInput.input?cachedInput.input:\"\")\n    const handleChange=(event)=>{\n        setInput(event.target.value)\n    }\n    const handleKeyPress=(event)=>{\n        if(input!==\"\" && event.keyCode==13 && Object.keys(cachedInput).length === 0){\n            dispatch({type:ADD_TASK,payload:{\"completed\":false,input}})\n        }\n        else if(input!==cachedInput.input && event.keyCode==13 && Object.keys(cachedInput).length !== 0){\n            dispatch({type:UPDATE_TASK,payload:{\"completed\":false,\"index\":cachedInput.index,updatetask:input}})\n        }\n    }\n    return (\n        <div className=\"main-container\">\n            <div className={`input-container  input-container__${theme===true?\"light\":\"dark\"}`} style={{backgroundColor:theme===true?\"white\":\"#25273c\"}} >\n                    <input className={`input-container__todo input-container__todo__${theme===true?\"light\":\"dark\"}`} placeholder=\"Create a new Todo and press enter\" onChange={handleChange} value={input} onKeyUp={handleKeyPress} style={{backgroundColor:theme===true?\"white\":\"#25273c\"}}/>\n            </div> \n        </div>\n    )\n}\n\nexport default InputContainer\n","/Users/abhay/Desktop/todo-react/src/redux/reducers/todoreducer.js",[],"/Users/abhay/Desktop/todo-react/src/redux/rootreducers.js",[],["52","53"],"/Users/abhay/Desktop/todo-react/src/Components/TodoListContainer.jsx",["54","55"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"../styles/TodoListContainer.scss\";\nimport IconCheck from \"../images/icon-check.svg\";\nimport IconCross from \"../images/icon-cross.svg\";\nimport * as types from \"../redux/actiontypes\";\nfunction TodoListContainer() {\n  const todolist = useSelector((state) => state.todoreducer.todos);\n  console.log(\"the todolist\", todolist);\n  const theme = useSelector((state) => state.todoreducer.theme);\n  const dispatch = useDispatch();\n  const handleDelete = (index) => {\n    dispatch({ type: types.DELETE_TASK, payload: index });\n  };\n  const handleUpdate = (index, input) => {\n    dispatch({\n      type: types.EDIT__TASK,\n      payload: { index: index, input: input },\n    });\n  };\n  const handleComplete = (index, input) => {\n    dispatch({\n      type: types.UPDATE_TASK,\n      payload: { index: index, completed: true, updatetask: input },\n    });\n  };\n  return (\n    <>\n      {todolist.map((item, index) => {\n        return (\n          <div\n            className={`inputlist-container inputlist-container${\n              theme === true ? \"__light\" : \"__dark\"\n            }`}\n            key={index}\n          >\n            <div className=\"inputlist-container__child\">\n              <div\n                className=\"inputlist-container__child__checkmark\"\n                onClick={() => handleComplete(index, item.input)}\n                key={index}\n              >\n                {item.completed === true && (\n                  <img\n                    src={IconCheck}\n                    alt=\"check-icon\"\n                    className={\"inputlist-container__check\"}\n                  />\n                )}\n              </div>\n              <p\n                className={`inputlist-container__text inputlist-container__text${\n                  item.completed === true ? \"__completed\" : \"\"\n                }`}\n                onClick={() => handleUpdate(index, item.input)}\n              >\n                {item.input}\n              </p>\n              <img\n                src={IconCross}\n                alt=\"delete-icon\"\n                className={\"inputlist-container__cross\"}\n                onClick={() => handleDelete(index)}\n              />\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default TodoListContainer;\n","/Users/abhay/Desktop/todo-react/src/redux/actiontypes.js",[],"/Users/abhay/Desktop/todo-react/src/Components/TabsContainer.jsx",["56","57","58","59","60","61","62"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ACTIVE_TASK, COMPLETE_TASK } from \"../redux/actiontypes\";\nimport styles from \"../styles/TabsContainer.scss\";\nfunction TabsContainer() {\n  let theme = useSelector((state) => state.todoreducer.theme);\n  const dispatch = useDispatch();\n  const todolist = useSelector((state) => state.todoreducer.todos);\n  const index = todolist.map((item, index) => {\n    if (item.completed == true) {\n      return index;\n    }\n  });\n  const handleComplete = () => {\n    let completeIndex = todolist.filter((item, index) => {\n      return item.completed == true;\n    });\n    dispatch({ type: COMPLETE_TASK, completeList: completeIndex });\n  };\n  const handleActive = () => {\n    let activeIndex = todolist.filter((item, index) => {\n      return item.completed == false;\n    });\n    dispatch({ type: ACTIVE_TASK, activeList: activeIndex });\n  };\n  return (\n    <>\n      <div\n        className={`tabs-container tabs-container${\n          theme === true ? \"__light\" : \"__dark\"\n        } animate__animated animate__lightSpeedInLeft`}\n      >\n        <button>\n          <span>{`${todolist.length} items left`}</span>\n        </button>\n        <button onClick={handleActive}>\n          <span>{`Clear Completed`}</span>\n        </button>\n      </div>\n      <div\n        className={`priority-container animate__animated animate__lightSpeedInRight priority-container${\n          theme === true ? \"__light\" : \"__dark\"\n        }`}\n      >\n        <button tabIndex=\"0\">All</button>\n        <button tabIndex=\"0\" onClick={handleActive}>Active</button>\n        <button tabIndex=\"0\" onClick={handleComplete}>Completed</button>\n      </div>\n    </>\n  );\n}\n\nexport default TabsContainer;\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":12,"column":9,"nodeType":"69","messageId":"70","endLine":12,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":15,"column":6,"nodeType":"74","endLine":15,"endColumn":13,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":28,"column":11,"nodeType":"78","endLine":32,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":14,"column":39,"nodeType":"81","messageId":"82","endLine":14,"endColumn":41},{"ruleId":"79","severity":1,"message":"80","line":17,"column":59,"nodeType":"81","messageId":"82","endLine":17,"endColumn":61},{"ruleId":"63","replacedBy":"83"},{"ruleId":"65","replacedBy":"84"},{"ruleId":"67","severity":1,"message":"85","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},{"ruleId":"67","severity":1,"message":"85","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"86","line":9,"column":9,"nodeType":"69","messageId":"70","endLine":9,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":9,"column":44,"nodeType":"89","messageId":"90","endLine":9,"endColumn":46},{"ruleId":"79","severity":1,"message":"80","line":10,"column":24,"nodeType":"81","messageId":"82","endLine":10,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":16,"column":29,"nodeType":"81","messageId":"82","endLine":16,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":22,"column":29,"nodeType":"81","messageId":"82","endLine":22,"endColumn":31},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'todolist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["93"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["91"],["92"],"'useState' is defined but never used.","'index' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [dispatch, theme]",{"range":"96","text":"97"},[645,652],"[dispatch, theme]"]